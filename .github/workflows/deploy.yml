on:
  push:
    branches: [ master, release ]

name: NestJs Project CI on ECR
env:
  FULL_REPO_NAME: ''
jobs:
  set_repo_name:
    name: Set full ECR repository name
    runs-on: ubuntu-latest

    steps:
    - name: Check if it's master branch
      if: ${{github.ref_name == 'master'}}
      run: echo "FULL_REPO_NAME=master" >> $GITHUB_ENV
        


    - name: Check if it's release branch
      if: ${{github.ref_name == 'release'}}
      run: echo "FULL_REPO_NAME=release" >> $GITHUB_ENV

    - name: use var
      run: echo "${FULL_REPO_NAME}"


  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: us-east-1

  #   - name: Login to Amazon ECR
  #     id: login-ecr
  #     uses: aws-actions/amazon-ecr-login@v1

  #   - name: Build, tag, and push the image to Amazon ECR
  #     id: build-image
  #     env:
  #       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #       ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
  #       IMAGE_TAG: ${{github.ref_name}}
  #     run: |
  #       # Build a docker container and push it to ECR 
  #       docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #       echo "Pushing image to ECR..."
  #       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  #       echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
