on:
  push:
    branches: [ master, release ]

name: NestJs Project CI on ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    env:
      REPO_NAME: 'a'
      AWS_ACCESS_KEY_ID: 'b'
      AWS_SECRET_ACCESS_KEY: 'c'

    steps:

    - name: Check if it's master branch
      if: ${{github.ref_name == 'master'}}
      run: |
        echo "REPO_NAME=$secrets.DEV_REPO_NAME" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=${{secrets.DEV_AWS_ACCESS_KEY_ID}}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=secrets.DEV_SECRET_ACCESS_KEY" >> $GITHUB_ENV
        
    - name: Check if it's release branch
      if: ${{github.ref_name == 'release'}}
      run: |
        echo "REPO_NAME=$secrets.STAGE_REPO_NAME" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID={$secrets.STAGE_REPO_NAME}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=three" >> $GITHUB_ENV

    - name: check vars
      run: |
        echo "$REPO_NAME"
        echo "$AWS_ACCESS_KEY_ID"
        echo "$AWS_SECRET_ACCESS_KEY"


    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG"
